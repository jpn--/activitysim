Description,Expression,DRIVEALONEFREE,DRIVEALONEPAY,SHARED2FREE,SHARED2PAY,SHARED3FREE,SHARED3PAY,WALK,BIKE,WALK_LOC,WALK_LRF,WALK_EXP,WALK_HVY,WALK_COM,DRIVE_LOC,DRIVE_LRF,DRIVE_EXP,DRIVE_HVY,DRIVE_COM,TAXI,TNC_SINGLE,TNC_SHARED
#Drive alone no toll,,,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable,sov_available == False,-999,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable for zero auto households,auto_ownership == 0,-999,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable for persons less than 16,age < 16,-999,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable for joint tours,is_joint == True,-999,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable if didn't drive to work,is_atwork_subtour & ~work_tour_is_SOV,-999,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - In-vehicle time,@odt_skims['SOV_TIME'] + dot_skims['SOV_TIME'],c_ivt,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Terminal time,@2 * df.terminal_time,c_walktimeshort_multiplier * c_ivt,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Operating cost,@df.ivot * costPerMile * (odt_skims['SOV_DIST'] + dot_skims['SOV_DIST']),c_ivt_cost_multiplier*c_ivt,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Parking cost,ivot * daily_parking_cost,c_ivt_cost_multiplier*c_ivt,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Bridge toll,@df.ivot * (odt_skims['SOV_BTOLL'] + dot_skims['SOV_BTOLL']),c_ivt_cost_multiplier*c_ivt,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Person is between 16 and 19 years old,@(df.age >= 16) & (df.age <= 19),c_age1619_da_multiplier,,,,,,,,,,,,,,,,,,,,
#Drive alone toll,,,,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Unavailable,sovtoll_available == False,,-999,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Unavailable for zero auto households,auto_ownership == 0,,-999,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Unavailable for persons less than 16,age < 16,,-999,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Unavailable for joint tours,is_joint == True,,-999,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Unavailable if didn't drive to work,is_atwork_subtour & ~work_tour_is_SOV,,-999,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - In-vehicle time,@odt_skims['SOVTOLL_TIME'] + dot_skims['SOVTOLL_TIME'],,c_ivt,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Terminal time,@2 * df.terminal_time,,c_walktimeshort_multiplier*c_ivt,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Operating cost,@df.ivot * costPerMile * (odt_skims['SOVTOLL_DIST'] + dot_skims['SOVTOLL_DIST']),,c_ivt_cost_multiplier*c_ivt,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Parking cost,ivot * daily_parking_cost,,c_ivt_cost_multiplier*c_ivt,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Bridge toll,@df.ivot * (odt_skims['SOVTOLL_BTOLL'] + dot_skims['SOVTOLL_BTOLL']),,c_ivt_cost_multiplier*c_ivt,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Value toll,@df.ivot * (odt_skims['SOVTOLL_VTOLL'] + dot_skims['SOVTOLL_VTOLL']),,c_ivt_cost_multiplier*c_ivt,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Person is between 16 and 19 years old,@(df.age >= 16) & (df.age <= 19),,c_age1619_da_multiplier*c_ivt,,,,,,,,,,,,,,,,,,,
#Shared ride 2,,,,,,,,,,,,,,,,,,,,,,
SHARED2FREE - Unavailable,hov2_available == False,,,-999,,,,,,,,,,,,,,,,,,
SHARED2FREE - Unavailable based on party size,is_joint & (number_of_participants > 2),,,-999,,,,,,,,,,,,,,,,,,
SHARED2FREE - In-vehicle time,@(odt_skims['HOV2_TIME'] + dot_skims['HOV2_TIME']),,,c_ivt,,,,,,,,,,,,,,,,,,
SHARED2FREE - Terminal time,@2 * df.terminal_time,,,c_walktimeshort_multiplier*c_ivt,,,,,,,,,,,,,,,,,,
SHARED2FREE - Operating cost,@df.ivot * costPerMile * (odt_skims['HOV2_DIST'] + dot_skims['HOV2_DIST']),,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,,,,,,,,
SHARED2FREE - Parking cost,@df.ivot * df.daily_parking_cost / costShareSr2,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,,,,,,,,
SHARED2FREE - Bridge toll,@df.ivot * (odt_skims['HOV2_BTOLL'] + dot_skims['HOV2_BTOLL']) / costShareSr2,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,,,,,,,,
SHARED2FREE - One person household,@(df.hhsize == 1),,,c_hhsize1_sr_multiplier*c_ivt,,,,,,,,,,,,,,,,,,
SHARED2FREE - Two person household,@(df.hhsize == 2),,,c_hhsize2_sr_multiplier*c_ivt,,,,,,,,,,,,,,,,,,
SHARED2FREE - Person is 16 years old or older,@(df.age >= 16),,,c_age16p_sr_multiplier*c_ivt,,,,,,,,,,,,,,,,,,
#Shared ride 2 toll,,,,,,,,,,,,,,,,,,,,,,
SHARED2PAY - Unavailable,hov2toll_available == False,,,,-999,,,,,,,,,,,,,,,,,
SHARED2PAY - Unavailable based on party size,is_joint & (number_of_participants > 2),,,,-999,,,,,,,,,,,,,,,,,
SHARED2PAY - In-vehicle time,@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']),,,,c_ivt,,,,,,,,,,,,,,,,,
SHARED2PAY - Terminal time,@2 * df.terminal_time,,,,c_walktimeshort_multiplier*c_ivt,,,,,,,,,,,,,,,,,
SHARED2PAY - Operating cost,@df.ivot * costPerMile * (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']),,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,,,,,,,
SHARED2PAY - Parking cost,@df.ivot * df.daily_parking_cost / costShareSr2,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,,,,,,,
SHARED2PAY - Bridge toll,@df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) / costShareSr2,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,,,,,,,
SHARED2PAY - Value toll,@df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) / costShareSr2,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,,,,,,,
SHARED2PAY - One person household,@(df.hhsize == 1),,,,c_hhsize1_sr_multiplier*c_ivt,,,,,,,,,,,,,,,,,
SHARED2PAY - Two person household,@(df.hhsize == 2),,,,c_hhsize2_sr_multiplier*c_ivt,,,,,,,,,,,,,,,,,
SHARED2PAY - Person is 16 years old or older,@(df.age >= 16),,,,c_age16p_sr_multiplier*c_ivt,,,,,,,,,,,,,,,,,
#Shared ride 3+,,,,,,,,,,,,,,,,,,,,,,
SHARED3FREE - Unavailable,hov3_available == False,,,,,-999,,,,,,,,,,,,,,,,
SHARED3FREE - In-vehicle time,@(odt_skims['HOV3_TIME'] + dot_skims['HOV3_TIME']),,,,,c_ivt,,,,,,,,,,,,,,,,
SHARED3FREE - Terminal time,@2 * df.terminal_time,,,,,c_walktimeshort_multiplier*c_ivt,,,,,,,,,,,,,,,,
SHARED3FREE - Operating cost,@df.ivot * costPerMile * (odt_skims['HOV3_DIST'] + dot_skims['HOV3_DIST']),,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,,,,,,
SHARED3FREE - Parking cost,@df.ivot *  df.daily_parking_cost / costShareSr3,,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,,,,,,
SHARED3FREE - Bridge toll,@df.ivot * (odt_skims['HOV3_BTOLL'] + dot_skims['HOV3_BTOLL']) / costShareSr3,,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,,,,,,
SHARED3FREE - One person household,@(df.hhsize == 1),,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,,,,,,
SHARED3FREE - Two person household,@(df.hhsize == 2),,,,,c_hhsize2_sr_multiplier*c_ivt,,,,,,,,,,,,,,,,
SHARED3FREE - Person is 16 years old or older,@(df.age >= 16),,,,,c_age16p_sr_multiplier*c_ivt,,,,,,,,,,,,,,,,
#Shared ride 3+ toll,,,,,,,,,,,,,,,,,,,,,,
SHARED3PAY - Unavailable,hov3toll_available == False,,,,,,-999,,,,,,,,,,,,,,,
SHARED3PAY - In-vehicle time,@(odt_skims['HOV3TOLL_TIME'] + dot_skims['HOV3TOLL_TIME']),,,,,,c_ivt,,,,,,,,,,,,,,,
SHARED3PAY - Terminal time,@2 * df.terminal_time,,,,,,c_walktimeshort_multiplier*c_ivt,,,,,,,,,,,,,,,
SHARED3PAY - Operating cost,@df.ivot * costPerMile * (odt_skims['HOV3TOLL_DIST'] + dot_skims['HOV3TOLL_DIST']),,,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,,,,,
SHARED3PAY - Parking cost,@df.ivot * df.daily_parking_cost / costShareSr3,,,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,,,,,
SHARED3PAY - Bridge toll,@df.ivot * (odt_skims['HOV3TOLL_BTOLL'] + dot_skims['HOV3TOLL_BTOLL']) / costShareSr3,,,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,,,,,
SHARED3PAY - Value toll,@df.ivot * (odt_skims['HOV3TOLL_VTOLL'] + dot_skims['HOV3TOLL_VTOLL']) / costShareSr3,,,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,,,,,
SHARED3PAY - One person household,@(df.hhsize == 1),,,,,,c_hhsize1_sr_multiplier*c_ivt,,,,,,,,,,,,,,,
SHARED3PAY - Two person household,@(df.hhsize == 2),,,,,,c_hhsize2_sr_multiplier*c_ivt,,,,,,,,,,,,,,,
SHARED3PAY - Person is 16 years old or older,@(df.age >= 16),,,,,,c_age16p_sr_multiplier*c_ivt,,,,,,,,,,,,,,,
#Walk,,,,,,,,,,,,,,,,,,,,,,
#FIXME - skims aren't symmetrical,so we have to make sure they can get back,,,,,,,,,,,,,,,,,,,,,
WALK - Time up to 2 miles,@(od_skims['DISTWALK'].clip(upper=walkThresh) + od_skims.reverse('DISTWALK').clip(upper=walkThresh))*60/walkSpeed,,,,,,,c_walktimeshort_multiplier*c_ivt,,,,,,,,,,,,,,
WALK - Time beyond 2 of a miles,@((od_skims['DISTWALK'] - walkThresh).clip(lower=0) + (od_skims.reverse('DISTWALK') - walkThresh).clip(lower=0))*60/walkSpeed,,,,,,,c_walktimelong_multiplier*c_ivt,,,,,,,,,,,,,,
WALK - Destination zone densityIndex,@df.density_index,,,,,,,c_density_index,,,,,,,,,,,,,,
WALK - Topology,@df.dest_topology,,,,,,,c_topology_walk_multiplier*c_ivt,,,,,,,,,,,,,,
#Bike,,,,,,,,,,,,,,,,,,,,,,
#FIXME - skims aren't symmetrical,so we have to make sure they can get back,,,,,,,,,,,,,,,,,,,,,
BIKE - Unavailable if didn't bike to work,is_atwork_subtour & ~work_tour_is_bike,,,,,,,,-999,,,,,,,,,,,,,
BIKE - Time up to 6 miles,@(od_skims['DISTBIKE'].clip(upper=bikeThresh) + od_skims.reverse('DISTBIKE').clip(upper=bikeThresh))*60/bikeSpeed,,,,,,,,c_biketimeshort_multiplier*c_ivt,,,,,,,,,,,,,
BIKE - Time beyond 6 of a miles,@((od_skims['DISTBIKE']-bikeThresh).clip(lower=0) + (od_skims.reverse('DISTBIKE')-bikeThresh).clip(lower=0))*60/bikeSpeed,,,,,,,,c_biketimelong_multiplier*c_ivt,,,,,,,,,,,,,
BIKE - Destination zone densityIndex,@df.density_index,,,,,,,,c_density_index,,,,,,,,,,,,,
BIKE - Topology,@df.dest_topology,,,,,,,,c_topology_bike_multiplier*c_ivt,,,,,,,,,,,,,
#Walk to Local,,,,,,,,,,,,,,,,,,,,,,
WALK_LOC - Unavailable,walk_local_available == False,,,,,,,,,-999,,,,,,,,,,,,
WALK_LOC - In-vehicle time,@(odt_skims['WLK_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_WLK_TOTIVT']/100),,,,,,,,,c_ivt,,,,,,,,,,,,
WALK_LOC - Short iwait time,@((odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,c_short_i_wait_multiplier*c_ivt,,,,,,,,,,,,
WALK_LOC - Long iwait time,@((odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,c_long_i_wait_multiplier*c_ivt,,,,,,,,,,,,
WALK_LOC - transfer wait time,@(odt_skims['WLK_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_WLK_XWAIT']/100),,,,,,,,,c_xwait_multiplier*c_ivt,,,,,,,,,,,,
WALK_LOC - number of transfers,@((odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_WLK_BOARDS']-1).clip(0)),,,,,,,,,c_xfers_wlk_multiplier*c_ivt,,,,,,,,,,,,
WALK_LOC - Walk access time,@2 * df.origin_walk_time,,,,,,,,,c_wacc_multiplier*c_ivt,,,,,,,,,,,,
WALK_LOC - Walk egress time,@2 * df.destination_walk_time,,,,,,,,,c_wegr_multiplier*c_ivt,,,,,,,,,,,,
WALK_LOC - Walk other time,@(odt_skims['WLK_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_WLK_WAUX']/100),,,,,,,,,c_waux_multiplier*c_ivt,,,,,,,,,,,,
WALK_LOC - Fare,@df.ivot * (odt_skims['WLK_LOC_WLK_FAR'] + dot_skims['WLK_LOC_WLK_FAR']),,,,,,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,,
WALK_LOC - Destination zone densityIndex,@df.dest_density_index,,,,,,,,,c_density_index,,,,,,,,,,,,
WALK_LOC - Topology,@df.dest_topology,,,,,,,,,c_topology_trn_multiplier*c_ivt,,,,,,,,,,,,
WALK_LOC - Person is less than 10 years old,@(df.age <= 10),,,,,,,,,c_age010_trn_multiplier*c_ivt,,,,,,,,,,,,
#Walk to Light rail/Ferry,,,,,,,,,,,,,,,,,,,,,,
WALK_LRF - Unavailable,walk_lrf_available == False,,,,,,,,,,-999,,,,,,,,,,,
WALK_LRF - In-vehicle time,@(odt_skims['WLK_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_WLK_TOTIVT']/100),,,,,,,,,,c_ivt,,,,,,,,,,,
# FIXME coefficients below are wrong or needlessly complex? could be re-expressed to avoid subtract?,,,,,,,,,,,,,,,,,,,,,,
WALK_LRF - In-vehicle time on Light Rail (incremental w/ ivt),@(odt_skims['WLK_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_WLK_KEYIVT']/100),,,,,,,,,,c_ivt_lrt_multiplier*c_ivt-c_ivt,,,,,,,,,,,
WALK_LRF - In-vehicle time on Ferry (incremental w/keyivt),@(odt_skims['WLK_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_WLK_FERRYIVT']/100),,,,,,,,,,(c_ivt_ferry_multiplier-c_ivt_lrt_multiplier)*c_ivt,,,,,,,,,,,
WALK_LRF - Short iwait time,@((odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,c_short_i_wait_multiplier*c_ivt,,,,,,,,,,,
WALK_LRF - Long iwait time,@((odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,c_long_i_wait_multiplier*c_ivt,,,,,,,,,,,
WALK_LRF - transfer wait time,@(odt_skims['WLK_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_WLK_XWAIT']/100),,,,,,,,,,c_xwait_multiplier*c_ivt,,,,,,,,,,,
WALK_LRF - number of transfers,@((odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_WLK_BOARDS']-1).clip(0)),,,,,,,,,,c_xfers_wlk_multiplier*c_ivt,,,,,,,,,,,
WALK_LRF - Walk access time,@2 * df.origin_walk_time,,,,,,,,,,c_wacc_multiplier*c_ivt,,,,,,,,,,,
WALK_LRF - Walk egress time,@2 * df.destination_walk_time,,,,,,,,,,c_wegr_multiplier*c_ivt,,,,,,,,,,,
WALK_LRF - Walk other time,@(odt_skims['WLK_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_WLK_WAUX']/100),,,,,,,,,,c_waux_multiplier*c_ivt,,,,,,,,,,,
WALK_LRF - Fare,@df.ivot * (odt_skims['WLK_LRF_WLK_FAR'] + dot_skims['WLK_LRF_WLK_FAR']),,,,,,,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,,
WALK_LRF - Destination zone densityIndex,@df.dest_density_index,,,,,,,,,,c_density_index,,,,,,,,,,,
WALK_LRF - Topology,@df.dest_topology,,,,,,,,,,c_topology_trn_multiplier*c_ivt,,,,,,,,,,,
WALK_LRF - Person is less than 10 years old,@(df.age <= 10),,,,,,,,,,c_age010_trn_multiplier*c_ivt,,,,,,,,,,,
#Walk to Express bus,,,,,,,,,,,,,,,,,,,,,,
WALK_EXP - Unavailable,walk_express_available == False,,,,,,,,,,,-999,,,,,,,,,,
WALK_EXP - In-vehicle time,@(odt_skims['WLK_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_WLK_TOTIVT']/100),,,,,,,,,,,c_ivt,,,,,,,,,,
WALK_EXP - In-vehicle time on Express bus (incremental w/ ivt),@(odt_skims['WLK_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_WLK_KEYIVT']/100),,,,,,,,,,,(c_ivt_exp_multiplier*c_ivt-c_ivt),,,,,,,,,,
WALK_EXP - Short iwait time,@((odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,,c_short_i_wait_multiplier*c_ivt,,,,,,,,,,
WALK_EXP - Long iwait time,@((odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,,c_long_i_wait_multiplier*c_ivt,,,,,,,,,,
WALK_EXP - transfer wait time,@(odt_skims['WLK_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_WLK_XWAIT']/100),,,,,,,,,,,c_xwait_multiplier*c_ivt,,,,,,,,,,
WALK_EXP - number of transfers,@((odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_WLK_BOARDS']-1).clip(0)),,,,,,,,,,,c_xfers_wlk_multiplier*c_ivt,,,,,,,,,,
WALK_EXP - Walk access time,@2 * df.origin_walk_time,,,,,,,,,,,c_wacc_multiplier*c_ivt,,,,,,,,,,
WALK_EXP - Walk egress time,@2 * df.destination_walk_time,,,,,,,,,,,c_wegr_multiplier*c_ivt,,,,,,,,,,
WALK_EXP - Walk other time,@(odt_skims['WLK_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_WLK_WAUX']/100),,,,,,,,,,,c_waux_multiplier*c_ivt,,,,,,,,,,
WALK_EXP - Fare,@df.ivot * (odt_skims['WLK_EXP_WLK_FAR'] + dot_skims['WLK_EXP_WLK_FAR']),,,,,,,,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,,
WALK_EXP - Destination zone densityIndex,@df.dest_density_index,,,,,,,,,,,c_density_index,,,,,,,,,,
WALK_EXP - Topology,@df.dest_topology,,,,,,,,,,,c_topology_trn_multiplier*c_ivt,,,,,,,,,,
WALK_EXP - Person is less than 10 years old,@(df.age <= 10),,,,,,,,,,,c_age010_trn_multiplier*c_ivt,,,,,,,,,,
#Walk to Heavy Rail,,,,,,,,,,,,,,,,,,,,,,
WALK_HVY - Unavailable,walk_heavyrail_available == False,,,,,,,,,,,,-999,,,,,,,,,
WALK_HVY - In-vehicle time,@(odt_skims['WLK_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_WLK_TOTIVT']/100),,,,,,,,,,,,c_ivt,,,,,,,,,
WALK_HVY - In-vehicle time on heavy rail (incremental w/ ivt),@(odt_skims['WLK_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_WLK_KEYIVT']/100),,,,,,,,,,,,(c_ivt_hvy_multiplier*c_ivt-c_ivt),,,,,,,,,
WALK_HVY - Short iwait time,@((odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,,,c_short_i_wait_multiplier*c_ivt,,,,,,,,,
WALK_HVY - Long iwait time,@((odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,,,c_long_i_wait_multiplier*c_ivt,,,,,,,,,
WALK_HVY - transfer wait time,@(odt_skims['WLK_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_WLK_XWAIT']/100),,,,,,,,,,,,c_xwait_multiplier*c_ivt,,,,,,,,,
WALK_HVY - number of transfers,@((odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_WLK_BOARDS']-1).clip(0)),,,,,,,,,,,,c_xfers_wlk_multiplier*c_ivt,,,,,,,,,
WALK_HVY - Walk access time,@2 * df.origin_walk_time,,,,,,,,,,,,c_wacc_multiplier*c_ivt,,,,,,,,,
WALK_HVY - Walk egress time,@2 *df.destination_walk_time,,,,,,,,,,,,c_wegr_multiplier*c_ivt,,,,,,,,,
WALK_HVY - Walk other time,@(odt_skims['WLK_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_WLK_WAUX']/100),,,,,,,,,,,,c_waux_multiplier*c_ivt,,,,,,,,,
WALK_HVY - Fare,@df.ivot * (odt_skims['WLK_HVY_WLK_FAR'] + dot_skims['WLK_HVY_WLK_FAR']),,,,,,,,,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,,
WALK_HVY - Destination zone densityIndex,@df.dest_density_index,,,,,,,,,,,,c_density_index,,,,,,,,,
WALK_HVY - Topology,@df.dest_topology,,,,,,,,,,,,c_topology_trn_multiplier*c_ivt,,,,,,,,,
WALK_HVY - Person is less than 10 years old,@(df.age <= 10),,,,,,,,,,,,c_age010_trn_multiplier*c_ivt,,,,,,,,,
#Walk to Commuter rail,,,,,,,,,,,,,,,,,,,,,,
WALK_COM - Unavailable,walk_commuter_available == False,,,,,,,,,,,,,-999,,,,,,,,
WALK_COM - In-vehicle time,@(odt_skims['WLK_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_WLK_TOTIVT']/100),,,,,,,,,,,,,c_ivt,,,,,,,,
WALK_COM - In-vehicle time on commuter rail (incremental w/ ivt),@(odt_skims['WLK_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_WLK_KEYIVT']/100),,,,,,,,,,,,,c_ivt_com_multiplier*c_ivt-c_ivt,,,,,,,,
WALK_COM - Short iwait time,@((odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,,,,c_short_i_wait_multiplier*c_ivt,,,,,,,,
WALK_COM - Long iwait time,@((odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,,,,c_long_i_wait_multiplier*c_ivt,,,,,,,,
WALK_COM - transfer wait time,@(odt_skims['WLK_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_WLK_XWAIT']/100),,,,,,,,,,,,,c_xwait_multiplier*c_ivt,,,,,,,,
WALK_COM - number of transfers,@((odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_WLK_BOARDS']-1).clip(0)),,,,,,,,,,,,,c_xfers_wlk_multiplier*c_ivt,,,,,,,,
WALK_COM - Walk access time,@2 * df.origin_walk_time,,,,,,,,,,,,,c_wacc_multiplier*c_ivt,,,,,,,,
WALK_COM - Walk egress time,@2 * df.destination_walk_time,,,,,,,,,,,,,c_wegr_multiplier*c_ivt,,,,,,,,
WALK_COM - Walk other time,@(odt_skims['WLK_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_WLK_WAUX']/100),,,,,,,,,,,,,c_waux_multiplier*c_ivt,,,,,,,,
WALK_COM - Fare,@df.ivot * (odt_skims['WLK_COM_WLK_FAR'] + dot_skims['WLK_COM_WLK_FAR']),,,,,,,,,,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,,
WALK_COM - Destination zone densityIndex,@df.dest_density_index,,,,,,,,,,,,,c_density_index,,,,,,,,
WALK_COM - Topology,@df.dest_topology,,,,,,,,,,,,,c_topology_trn_multiplier*c_ivt,,,,,,,,
WALK_COM - Person is less than 10 years old,@(df.age < 10),,,,,,,,,,,,,c_age010_trn_multiplier*c_ivt,,,,,,,,
#Drive to Local,,,,,,,,,,,,,,,,,,,,,,
DRIVE_LOC - Unavailable,drive_local_available == False,,,,,,,,,,,,,,-999,,,,,,,
DRIVE_LOC - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,,,,,-999,,,,,,,
DRIVE_LOC - Unavailable for persons less than 16,age < 16,,,,,,,,,,,,,,-999,,,,,,,
DRIVE_LOC - In-vehicle time,@(odt_skims['DRV_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_DRV_TOTIVT']/100),,,,,,,,,,,,,,c_ivt,,,,,,,
DRIVE_LOC - Short iwait time,@((odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,,,,,c_short_i_wait_multiplier*c_ivt,,,,,,,
DRIVE_LOC - Long iwait time,@((odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,,,,,c_long_i_wait_multiplier*c_ivt,,,,,,,
DRIVE_LOC - transfer wait time,@(odt_skims['DRV_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_DRV_XWAIT']/100),,,,,,,,,,,,,,c_xwait_multiplier*c_ivt,,,,,,,
DRIVE_LOC - number of transfers,@((odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_DRV_BOARDS']-1).clip(0)),,,,,,,,,,,,,,c_xfers_wlk_multiplier*c_ivt,,,,,,,
DRIVE_LOC - Drive time,@(odt_skims['DRV_LOC_WLK_DTIM']/100 + dot_skims['WLK_LOC_DRV_DTIM']/100),,,,,,,,,,,,,,c_dtim_multiplier*c_ivt,,,,,,,
DRIVE_LOC - Walk access time,@df.destination_walk_time,,,,,,,,,,,,,,c_wacc_multiplier*c_ivt,,,,,,,
DRIVE_LOC - Walk egress time (at attraction end),@df.destination_walk_time,,,,,,,,,,,,,,c_wegr_multiplier*c_ivt,,,,,,,
DRIVE_LOC - Walk other time,@(odt_skims['DRV_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_DRV_WAUX']/100),,,,,,,,,,,,,,c_waux_multiplier*c_ivt,,,,,,,
DRIVE_LOC - Fare and operating cost,@df.ivot * ((odt_skims['DRV_LOC_WLK_FAR'] + dot_skims['WLK_LOC_DRV_FAR']) + ((odt_skims['DRV_LOC_WLK_DDIST']/100+dot_skims['WLK_LOC_DRV_DDIST']/100) * costPerMile)),,,,,,,,,,,,,,c_ivt_cost_multiplier * c_ivt,,,,,,,
DRIVE_LOC - Ratio of drive access distance to OD distance,@((odt_skims['DRV_LOC_WLK_DDIST']/100+ dot_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']*2)),,,,,,,,,,,,,,c_dacc_ratio,,,,,,,
DRIVE_LOC - Destination zone densityIndex,@df.dest_density_index,,,,,,,,,,,,,,c_density_index,,,,,,,
DRIVE_LOC - Topology,@df.dest_topology,,,,,,,,,,,,,,c_topology_trn_multiplier*c_ivt,,,,,,,
DRIVE_LOC - Person is less than 10 years old,@(df.age < 10),,,,,,,,,,,,,,c_age010_trn_multiplier*c_ivt,,,,,,,
#Drive to Light Rail/Ferry,,,,,,,,,,,,,,,,,,,,,,
DRIVE_LRF - Unavailable,drive_lrf_available == False,,,,,,,,,,,,,,,-999,,,,,,
DRIVE_LRF - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,,,,,,-999,,,,,,
DRIVE_LRF - Unavailable for persons less than 16,age < 16,,,,,,,,,,,,,,,-999,,,,,,
DRIVE_LRF - In-vehicle time,@(odt_skims['DRV_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_DRV_TOTIVT']/100),,,,,,,,,,,,,,,c_ivt,,,,,,
DRIVE_LRF - In-vehicle time on Light Rail (incremental w/ ivt),@(odt_skims['DRV_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_DRV_KEYIVT']/100),,,,,,,,,,,,,,,(c_ivt_lrt_multiplier*c_ivt-c_ivt),,,,,,
DRIVE_LRF - In-vehicle time on Ferry (incremental w/ keyivt),@(odt_skims['DRV_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_DRV_FERRYIVT']/100),,,,,,,,,,,,,,,(c_ivt_ferry_multiplier-c_ivt_lrt_multiplier)*c_ivt,,,,,,
DRIVE_LRF - Short iwait time,@((odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,,,,,,c_short_i_wait_multiplier*c_ivt,,,,,,
DRIVE_LRF - Long iwait time,@((odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,,,,,,c_long_i_wait_multiplier*c_ivt,,,,,,
DRIVE_LRF - transfer wait time,@(odt_skims['DRV_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_DRV_XWAIT']/100),,,,,,,,,,,,,,,c_xwait_multiplier*c_ivt,,,,,,
DRIVE_LRF - number of transfers,@(odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0),,,,,,,,,,,,,,,c_xfers_drv_multiplier*c_ivt,,,,,,
DRIVE_LRF - Drive time,@(odt_skims['DRV_LRF_WLK_DTIM']/100 + dot_skims['WLK_LRF_DRV_DTIM']/100),,,,,,,,,,,,,,,c_dtim_multiplier*c_ivt,,,,,,
DRIVE_LRF - Walk access time (at attraction end),@df.destination_walk_time,,,,,,,,,,,,,,,c_wacc_multiplier*c_ivt,,,,,,
DRIVE_LRF - Walk egress time (at attraction end),@df.destination_walk_time,,,,,,,,,,,,,,,c_wegr_multiplier*c_ivt,,,,,,
DRIVE_LRF - Walk other time,@(odt_skims['DRV_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_DRV_WAUX']/100),,,,,,,,,,,,,,,c_waux_multiplier*c_ivt,,,,,,
DRIVE_LRF - Fare and operating cost,@df.ivot * ((odt_skims['DRV_LRF_WLK_FAR']+dot_skims['WLK_LRF_DRV_FAR']) + ((odt_skims['DRV_LRF_WLK_DDIST']/100+dot_skims['WLK_LRF_DRV_DDIST']/100) *costPerMile)),,,,,,,,,,,,,,,c_ivt_cost_multiplier * c_ivt,,,,,,
DRIVE_LRF - Ratio of drive access distance to OD distance,@((odt_skims['DRV_LRF_WLK_DDIST']/100+ dot_skims['WLK_LRF_DRV_DDIST']/100)/ (od_skims['DIST']*2)),,,,,,,,,,,,,,,c_dacc_ratio,,,,,,
DRIVE_LRF - Destination zone densityIndex,@df.dest_density_index,,,,,,,,,,,,,,,c_density_index,,,,,,
DRIVE_LRF - Topology,@df.dest_topology,,,,,,,,,,,,,,,c_topology_trn_multiplier*c_ivt,,,,,,
DRIVE_LRF - Person is less than 10 years old,@(df.age < 10),,,,,,,,,,,,,,,c_age010_trn_multiplier*c_ivt,,,,,,
#Drive to Express bus,,,,,,,,,,,,,,,,,,,,,,
DRIVE_EXP - Unavailable,drive_express_available == False,,,,,,,,,,,,,,,,-999,,,,,
DRIVE_EXP - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,,,,,,,-999,,,,,
DRIVE_EXP - Unavailable for persons less than 16,age < 16,,,,,,,,,,,,,,,,-999,,,,,
DRIVE_EXP - In-vehicle time,@(odt_skims['DRV_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_DRV_TOTIVT']/100),,,,,,,,,,,,,,,,c_ivt,,,,,
DRIVE_EXP - In-vehicle time on Express bus (incremental w/ ivt),@(odt_skims['DRV_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_DRV_KEYIVT']/100),,,,,,,,,,,,,,,,(c_ivt_exp_multiplier*c_ivt-c_ivt),,,,,
DRIVE_EXP - Short iwait time,@((odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,,,,,,,c_short_i_wait_multiplier*c_ivt,,,,,
DRIVE_EXP - Long iwait time,@((odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,,,,,,,c_long_i_wait_multiplier*c_ivt,,,,,
DRIVE_EXP - transfer wait time,@(odt_skims['DRV_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_DRV_XWAIT']/100),,,,,,,,,,,,,,,,c_xwait_multiplier*c_ivt,,,,,
DRIVE_EXP - number of transfers,@((odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_DRV_BOARDS']-1).clip(0)),,,,,,,,,,,,,,,,c_xfers_drv_multiplier*c_ivt,,,,,
DRIVE_EXP - Drive time,@(odt_skims['DRV_EXP_WLK_DTIM']/100 + dot_skims['WLK_EXP_DRV_DTIM']/100),,,,,,,,,,,,,,,,c_dtim_multiplier*c_ivt,,,,,
DRIVE_EXP - Walk access time (at attraction end),@df.destination_walk_time,,,,,,,,,,,,,,,,c_wacc_multiplier*c_ivt,,,,,
DRIVE_EXP - Walk egress ime (at attraction end),@df.destination_walk_time,,,,,,,,,,,,,,,,c_wegr_multiplier*c_ivt,,,,,
DRIVE_EXP - Walk other time,@(odt_skims['DRV_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_DRV_WAUX']/100),,,,,,,,,,,,,,,,c_waux_multiplier*c_ivt,,,,,
DRIVE_EXP - Fare and operating cost,@df.ivot * ((odt_skims['DRV_EXP_WLK_FAR']+dot_skims['WLK_EXP_DRV_FAR']) + ((odt_skims['DRV_EXP_WLK_DDIST']/100+dot_skims['WLK_EXP_DRV_DDIST']/100) *costPerMile)),,,,,,,,,,,,,,,,c_ivt_cost_multiplier * c_ivt,,,,,
DRIVE_EXP - Ratio of drive access distance to OD distance,@((odt_skims['DRV_EXP_WLK_DDIST']/100+ dot_skims['WLK_EXP_DRV_DDIST']/100)/ (od_skims['DIST']*2)),,,,,,,,,,,,,,,,c_dacc_ratio,,,,,
DRIVE_EXP - Destination zone densityIndex,@df.dest_density_index,,,,,,,,,,,,,,,,c_density_index,,,,,
DRIVE_EXP - Topology,@df.dest_topology,,,,,,,,,,,,,,,,c_topology_trn_multiplier*c_ivt,,,,,
DRIVE_EXP - Person is less than 10 years old,@(df.age < 10),,,,,,,,,,,,,,,,c_age010_trn_multiplier*c_ivt,,,,,
#Drive to Heavy Rail,,,,,,,,,,,,,,,,,,,,,,
DRIVE_HVY - Unavailable,drive_heavyrail_available == False,,,,,,,,,,,,,,,,,-999,,,,
DRIVE_HVY - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,,,,,,,,-999,,,,
DRIVE_HVY - Unavailable for persons less than 16,age < 16,,,,,,,,,,,,,,,,,-999,,,,
DRIVE_HVY - In-vehicle time,@(odt_skims['DRV_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_DRV_TOTIVT']/100),,,,,,,,,,,,,,,,,c_ivt,,,,
DRIVE_HVY - In-vehicle time on heavy rail (incremental w/ ivt),@(odt_skims['DRV_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_DRV_KEYIVT']/100),,,,,,,,,,,,,,,,,(c_ivt_hvy_multiplier*c_ivt-c_ivt),,,,
DRIVE_HVY - Short iwait time,@ ((odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,,,,,,,,c_short_i_wait_multiplier*c_ivt,,,,
DRIVE_HVY - Long iwait time,@((odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,,,,,,,,c_long_i_wait_multiplier*c_ivt,,,,
DRIVE_HVY - transfer wait time,@(odt_skims['DRV_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_DRV_XWAIT']/100),,,,,,,,,,,,,,,,,c_xwait_multiplier*c_ivt,,,,
DRIVE_HVY - number of transfers,@((odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_DRV_BOARDS']-1).clip(0)),,,,,,,,,,,,,,,,,c_xfers_drv_multiplier*c_ivt,,,,
DRIVE_HVY - Drive time,@(odt_skims['DRV_HVY_WLK_DTIM']/100 + dot_skims['WLK_HVY_DRV_DTIM']/100),,,,,,,,,,,,,,,,,c_dtim_multiplier*c_ivt,,,,
DRIVE_HVY - Walk access time (at attraction end),@df.destination_walk_time,,,,,,,,,,,,,,,,,c_wacc_multiplier*c_ivt,,,,
DRIVE_HVY - Walk egress time (at attraction end),@df.destination_walk_time,,,,,,,,,,,,,,,,,c_wegr_multiplier*c_ivt,,,,
DRIVE_HVY - Walk other time,@(odt_skims['DRV_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_DRV_WAUX']/100),,,,,,,,,,,,,,,,,c_waux_multiplier*c_ivt,,,,
DRIVE_HVY - Fare and operating cost,@df.ivot * ((odt_skims['DRV_HVY_WLK_FAR']+dot_skims['WLK_HVY_DRV_FAR']) + ((odt_skims['DRV_HVY_WLK_DDIST']/100+dot_skims['WLK_HVY_DRV_DDIST']/100) *costPerMile)),,,,,,,,,,,,,,,,,c_ivt_cost_multiplier * c_ivt,,,,
DRIVE_HVY - Ratio of drive access distance to OD distance,@(odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],,,,,,,,,,,,,,,,,c_dacc_ratio,,,,
DRIVE_HVY - Destination zone densityIndex,@df.dest_density_index,,,,,,,,,,,,,,,,,c_density_index,,,,
DRIVE_HVY - Topology,@df.dest_topology,,,,,,,,,,,,,,,,,c_topology_trn_multiplier*c_ivt,,,,
DRIVE_HVY - Person is less than 10 years old,@(df.age < 10),,,,,,,,,,,,,,,,,c_age010_trn_multiplier*c_ivt,,,,
#Drive to Commuter Rail,,,,,,,,,,,,,,,,,,,,,,
DRIVE_COM - Unavailable,drive_commuter_available == False,,,,,,,,,,,,,,,,,,-999,,,
DRIVE_COM - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,,,,,,,,,-999,,,
DRIVE_COM - Unavailable for persons less than 16,age < 16,,,,,,,,,,,,,,,,,,-999,,,
DRIVE_COM - In-vehicle time,@(odt_skims['DRV_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_DRV_TOTIVT']/100),,,,,,,,,,,,,,,,,,c_ivt,,,
DRIVE_COM - In-vehicle time on commuter rail (incremental w/ ivt),@(odt_skims['DRV_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_DRV_KEYIVT']/100),,,,,,,,,,,,,,,,,,(c_ivt_com_multiplier*c_ivt-c_ivt),,,
DRIVE_COM - Short iwait time,@((odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,,,,,,,,,c_short_i_wait_multiplier*c_ivt,,,
DRIVE_COM - Long iwait time,@((odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,,,,,,,,,c_long_i_wait_multiplier*c_ivt,,,
DRIVE_COM - transfer wait time,@(odt_skims['DRV_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_DRV_XWAIT']/100),,,,,,,,,,,,,,,,,,c_xwait_multiplier*c_ivt,,,
DRIVE_COM - number of transfers,@((odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_DRV_BOARDS']-1).clip(0)),,,,,,,,,,,,,,,,,,c_xfers_drv_multiplier*c_ivt,,,
DRIVE_COM - Drive time,@(odt_skims['DRV_COM_WLK_DTIM']/100 + dot_skims['WLK_COM_DRV_DTIM']/100),,,,,,,,,,,,,,,,,,c_dtim_multiplier*c_ivt,,,
DRIVE_COM - Walk access time (at attraction end),@df.destination_walk_time,,,,,,,,,,,,,,,,,,c_wacc_multiplier*c_ivt,,,
DRIVE_COM - Walk egress time (at attraction end),@df.destination_walk_time,,,,,,,,,,,,,,,,,,c_wegr_multiplier*c_ivt,,,
DRIVE_COM - Walk other time,@(odt_skims['DRV_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_DRV_WAUX']/100),,,,,,,,,,,,,,,,,,c_waux_multiplier*c_ivt,,,
DRIVE_COM - Fare and operating cost,@df.ivot * ((odt_skims['DRV_COM_WLK_FAR']+dot_skims['WLK_COM_DRV_FAR']) + ((odt_skims['DRV_COM_WLK_DDIST']/100+dot_skims['WLK_COM_DRV_DDIST']/100) *costPerMile)),,,,,,,,,,,,,,,,,,c_ivt_cost_multiplier * c_ivt,,,
DRIVE_COM - Ratio of drive access distance to OD distance,@((odt_skims['DRV_COM_WLK_DDIST']/100 + dot_skims['WLK_COM_DRV_DDIST']/100)/ (od_skims['DIST']*2)),,,,,,,,,,,,,,,,,,c_dacc_ratio,,,
DRIVE_COM - Destination zone densityIndex,@df.dest_density_index,,,,,,,,,,,,,,,,,,c_density_index,,,
DRIVE_COM - Topology,@df.dest_topology,,,,,,,,,,,,,,,,,,c_topology_trn_multiplier*c_ivt,,,
DRIVE_COM - Person is less than 10 years old,@(df.age < 10),,,,,,,,,,,,,,,,,,c_age010_trn_multiplier*c_ivt,,,
#Taxi,,,,,,,,,,,,,,,,,,,,,,
Taxi - In-vehicle time,@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']),,,,,,,,,,,,,,,,,,,c_ivt,,
# FIXME magic constant 1.5,,,,,,,,,,,,,,,,,,,,,,
Taxi - Wait time,@1.5 * df.totalWaitTaxi,,,,,,,,,,,,,,,,,,,c_ivt,,
Taxi - Tolls,@df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']),,,,,,,,,,,,,,,,,,,c_ivt_cost_multiplier * c_ivt,,
Taxi - Bridge toll,@df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),,,,,,,,,,,,,,,,,,,c_ivt_cost_multiplier * c_ivt,,
Taxi - Fare,@df.ivot * (Taxi_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * Taxi_costPerMile +(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * Taxi_costPerMinute)*100,,,,,,,,,,,,,,,,,,,c_ivt_cost_multiplier * c_ivt,,
#TNC Single,,,,,,,,,,,,,,,,,,,,,,
TNC Single - In-vehicle time,@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']),,,,,,,,,,,,,,,,,,,,c_ivt,
TNC Single - Wait time,@1.5 * df.totalWaitSingleTNC,,,,,,,,,,,,,,,,,,,,c_ivt,
TNC Single - Tolls,@df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']),,,,,,,,,,,,,,,,,,,,c_ivt_cost_multiplier * c_ivt,
TNC Single - Bridge toll,@df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),,,,,,,,,,,,,,,,,,,,c_ivt_cost_multiplier * c_ivt,
TNC Single - Cost,"@df.ivot * np.maximum(TNC_single_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_single_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",,,,,,,,,,,,,,,,,,,,c_ivt_cost_multiplier * c_ivt,
#TNC Shared,,,,,,,,,,,,,,,,,,,,,,
TNC Shared - In-vehicle time,@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_IVTFactor,,,,,,,,,,,,,,,,,,,,,c_ivt
# FIXME magic constant 1.5,,,,,,,,,,,,,,,,,,,,,,
TNC Shared - Wait time,@1.5 * df.totalWaitSharedTNC,,,,,,,,,,,,,,,,,,,,,c_ivt
TNC Shared - Tolls,@df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']),,,,,,,,,,,,,,,,,,,,,c_ivt_cost_multiplier * c_ivt
TNC Shared - Bridge toll,@df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),,,,,,,,,,,,,,,,,,,,,c_ivt_cost_multiplier * c_ivt
TNC Shared - Cost,"@df.ivot * np.maximum(TNC_shared_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_shared_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",,,,,,,,,,,,,,,,,,,,,c_ivt_cost_multiplier * c_ivt
#indiv tour ASCs,,,,,,,,,,,,,,,,,,,,,,
Walk ASC - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,,,walk_ASC_no_auto,,,,,,,,,,,,,,
Walk ASC - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,walk_ASC_auto_deficient,,,,,,,,,,,,,,
Walk ASC - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,walk_ASC_auto_sufficient,,,,,,,,,,,,,,
Bike ASC - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,,,,bike_ASC_no_auto,,,,,,,,,,,,,
Bike ASC - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,bike_ASC_auto_deficient,,,,,,,,,,,,,
Bike ASC - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,,bike_ASC_auto_sufficient,,,,,,,,,,,,,
Shared ride 2 ASC - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,sr2_ASC_no_auto,sr2_ASC_no_auto,,,,,,,,,,,,,,,,,
Shared ride 2 ASC - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,sr2_ASC_auto_deficient,sr2_ASC_auto_deficient,,,,,,,,,,,,,,,,,
Shared ride 2 ASC - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,sr2_ASC_auto_sufficient,sr2_ASC_auto_sufficient,,,,,,,,,,,,,,,,,
Shared ride 3+ - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,sr3p_ASC_no_auto,sr3p_ASC_no_auto,,,,,,,,,,,,,,,
Shared ride 3+ - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,sr3p_ASC_auto_deficient,sr3p_ASC_auto_deficient,,,,,,,,,,,,,,,
Shared ride 3+ - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,sr3p_ASC_auto_sufficient,sr3p_ASC_auto_sufficient,,,,,,,,,,,,,,,
Walk to Transit - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,,,,,walk_transit_ASC_no_auto,walk_transit_ASC_no_auto,walk_transit_ASC_no_auto,walk_transit_ASC_no_auto,walk_transit_ASC_no_auto,,,,,,,,
Walk to Transit - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,walk_transit_ASC_auto_deficient,walk_transit_ASC_auto_deficient,walk_transit_ASC_auto_deficient,walk_transit_ASC_auto_deficient,walk_transit_ASC_auto_deficient,,,,,,,,
Walk to Transit - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,,,walk_transit_ASC_auto_sufficient,walk_transit_ASC_auto_sufficient,walk_transit_ASC_auto_sufficient,walk_transit_ASC_auto_sufficient,walk_transit_ASC_auto_sufficient,,,,,,,,
Drive to Transit - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,,,,,,,,,,drive_transit_ASC_no_auto,drive_transit_ASC_no_auto,drive_transit_ASC_no_auto,drive_transit_ASC_no_auto,drive_transit_ASC_no_auto,,,
Drive to Transit - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,,,,,,drive_transit_ASC_auto_deficient,drive_transit_ASC_auto_deficient,drive_transit_ASC_auto_deficient,drive_transit_ASC_auto_deficient,drive_transit_ASC_auto_deficient,,,
Drive to Transit - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,,,,,,,,drive_transit_ASC_auto_sufficient,drive_transit_ASC_auto_sufficient,drive_transit_ASC_auto_sufficient,drive_transit_ASC_auto_sufficient,drive_transit_ASC_auto_sufficient,,,
Taxi - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,,,,,,,,,,,,,,,taxi_ASC_no_auto,,
Taxi - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,,,,,,,,,,,taxi_ASC_auto_deficient,,
Taxi - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,,,,,,,,,,,,,taxi_ASC_auto_sufficient,,
TNC Single - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,,,,,,,,,,,,,,,,tnc_single_ASC_no_auto,
TNC Single - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,,,,,,,,,,,,tnc_single_ASC_auto_deficient,
TNC Single - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,,,,,,,,,,,,,,tnc_single_ASC_auto_sufficient,
TNC Shared - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,,,,,,,,,,,,,,,,,tnc_shared_ASC_no_auto
TNC Shared - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,,,,,,,,,,,,,tnc_shared_ASC_auto_deficient
TNC Shared - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,,,,,,,,,,,,,,,tnc_shared_ASC_auto_sufficient
#joint tour ASCs,,,,,,,,,,,,,,,,,,,,,,
Joint - Walk ASC - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,,,joint_walk_ASC_no_auto,,,,,,,,,,,,,,
Joint - Walk ASC - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,joint_walk_ASC_auto_deficient,,,,,,,,,,,,,,
Joint - Walk ASC - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,joint_walk_ASC_auto_sufficient,,,,,,,,,,,,,,
Joint - Bike ASC - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,,,,joint_bike_ASC_no_auto,,,,,,,,,,,,,
Joint - Bike ASC - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,joint_bike_ASC_auto_deficient,,,,,,,,,,,,,
Joint - Bike ASC - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,,joint_bike_ASC_auto_sufficient,,,,,,,,,,,,,
Joint - Shared ride 2 ASC - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,joint_sr2_ASC_no_auto,joint_sr2_ASC_no_auto,,,,,,,,,,,,,,,,,
Joint - Shared ride 2 ASC - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,joint_sr2_ASC_auto_deficient,joint_sr2_ASC_auto_deficient,,,,,,,,,,,,,,,,,
Joint - Shared ride 2 ASC - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,joint_sr2_ASC_auto_sufficient,joint_sr2_ASC_auto_sufficient,,,,,,,,,,,,,,,,,
Joint - Shared ride 3+ - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,joint_sr3p_ASC_no_auto,joint_sr3p_ASC_no_auto,,,,,,,,,,,,,,,
Joint - Shared ride 3+ - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,joint_sr3p_ASC_auto_deficient,joint_sr3p_ASC_auto_deficient,,,,,,,,,,,,,,,
Joint - Shared ride 3+ - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,joint_sr3p_ASC_auto_sufficient,joint_sr3p_ASC_auto_sufficient,,,,,,,,,,,,,,,
Joint - Walk to Transit - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,,,,,joint_walk_transit_ASC_no_auto,joint_walk_transit_ASC_no_auto,joint_walk_transit_ASC_no_auto,joint_walk_transit_ASC_no_auto,joint_walk_transit_ASC_no_auto,,,,,,,,
Joint - Walk to Transit - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,joint_walk_transit_ASC_auto_deficient,joint_walk_transit_ASC_auto_deficient,joint_walk_transit_ASC_auto_deficient,joint_walk_transit_ASC_auto_deficient,joint_walk_transit_ASC_auto_deficient,,,,,,,,
Joint - Walk to Transit - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,,,joint_walk_transit_ASC_auto_sufficient,joint_walk_transit_ASC_auto_sufficient,joint_walk_transit_ASC_auto_sufficient,joint_walk_transit_ASC_auto_sufficient,joint_walk_transit_ASC_auto_sufficient,,,,,,,,
Joint - Drive to Transit - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,,,,,,,,,,joint_drive_transit_ASC_no_auto,joint_drive_transit_ASC_no_auto,joint_drive_transit_ASC_no_auto,joint_drive_transit_ASC_no_auto,joint_drive_transit_ASC_no_auto,,,
Joint - Drive to Transit - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,,,,,,joint_drive_transit_ASC_auto_deficient,joint_drive_transit_ASC_auto_deficient,joint_drive_transit_ASC_auto_deficient,joint_drive_transit_ASC_auto_deficient,joint_drive_transit_ASC_auto_deficient,,,
Joint - Drive to Transit - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,,,,,,,,joint_drive_transit_ASC_auto_sufficient,joint_drive_transit_ASC_auto_sufficient,joint_drive_transit_ASC_auto_sufficient,joint_drive_transit_ASC_auto_sufficient,joint_drive_transit_ASC_auto_sufficient,,,
Joint - Taxi - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,,,,,,,,,,,,,,,joint_taxi_ASC_no_auto,,
Joint - Taxi - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,,,,,,,,,,,joint_taxi_ASC_auto_deficient,,
Joint - Taxi - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,,,,,,,,,,,,,joint_taxi_ASC_auto_sufficient,,
Joint - TNC Single - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,,,,,,,,,,,,,,,,joint_tnc_single_ASC_no_auto,
Joint - TNC Single - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,,,,,,,,,,,,joint_tnc_single_ASC_auto_deficient,
Joint - TNC Single - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,,,,,,,,,,,,,,joint_tnc_single_ASC_auto_sufficient,
Joint - TNC Shared - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,,,,,,,,,,,,,,,,,joint_tnc_shared_ASC_no_auto
Joint - TNC Shared - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,,,,,,,,,,,,,joint_tnc_shared_ASC_auto_deficient
Joint - TNC Shared - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,,,,,,,,,,,,,,,joint_tnc_shared_ASC_auto_sufficient
Local bus ASC,1,,,,,,,,,local_bus_ASC,,,,,local_bus_ASC,,,,,,,
Walk to Light Rail ASC,@(df.walk_ferry_available == False),,,,,,,,,,walk_light_rail_ASC,,,,,,,,,,,
Drive to Light Rail ASC,@(df.drive_ferry_available == False),,,,,,,,,,,,,,,drive_light_rail_ASC,,,,,,
Walk to Ferry ASC,@df.walk_ferry_available,,,,,,,,,,walk_ferry_ASC,,,,,,,,,,,
Drive to Ferry ASC,@df.drive_ferry_available,,,,,,,,,,,,,,,drive_ferry_ASC,,,,,,
Express Bus ASC,1,,,,,,,,,,,express_bus_ASC,,,,,express_bus_ASC,,,,,
Heavy Rail ASC,1,,,,,,,,,,,,heavy_rail_ASC,,,,,heavy_rail_ASC,,,,
Commuter Rail,1,,,,,,,,,,,,,commuter_rail_ASC,,,,,commuter_rail_ASC,,,
Walk to Transit dest CBD,@df.destination_in_cbd,,,,,,,,,walk_transit_CBD_ASC,walk_transit_CBD_ASC,walk_transit_CBD_ASC,walk_transit_CBD_ASC,walk_transit_CBD_ASC,,,,,,,,
Drive to Transit dest CBD,@df.destination_in_cbd,,,,,,,,,,,,,,drive_transit_CBD_ASC,drive_transit_CBD_ASC,drive_transit_CBD_ASC,drive_transit_CBD_ASC,drive_transit_CBD_ASC,,,
# FIXME brain teaser,,,,,,,,,,,,,,,,,,,,,
#Drive to Transit - distance penalty,@(c_drvtrn_distpen_0_multiplier*c_ivt*(1-od_skims['DIST']/c_drvtrn_distpen_max)).clip(upper=0),,,,,,,,,,,,,,1,1,1,1,1,,,
Drive to Transit - distance penalty,@(1-od_skims['DIST']/drvtrn_distpen_max).clip(lower=0),,,,,,,,,,,,,,c_drvtrn_distpen_0_multiplier*c_ivt,c_drvtrn_distpen_0_multiplier*c_ivt,c_drvtrn_distpen_0_multiplier*c_ivt,c_drvtrn_distpen_0_multiplier*c_ivt,c_drvtrn_distpen_0_multiplier*c_ivt,,,
# FIXME - skims aren't symmetrical,so we have to make sure they can get back,,,,,,,,,,,,,,,,,,,,,
Walk not available for long distances,@od_skims.max('DISTWALK') > 3,,,,,,,-999,,,,,,,,,,,,,,
Bike not available for long distances,@od_skims.max('DISTBIKE') > 8,,,,,,,,-999,,,,,,,,,,,,,
Drive alone not available for escort tours,is_escort,-999,-999,,,,,,,,,,,,,,,,,,,